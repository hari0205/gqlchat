
## ENUMS
enum ROLE {
    USER,
    ADMIN,
}

## SCALAR TYPE


### Interfaces  

interface IUser {
    uid: ID!
    name: String!
    username:String!
    email:String!
    password:String!
}

interface IMessage{
    id:ID!
    content:String!
    sentBy:User!
}

interface IChatRoom{
    id:ID!
    title:String!
    slug:String!
    messages:[Message]
}

### Types

type User implements IUser{
    uid: ID!
    name: String!
    username:String!
    email:String!
    password:String!
    role:ROLE
}

type Message implements IMessage{
    id:ID!
    content:String!
    sentBy:User!
}

type ChatRoom implements IChatRoom{
    id:ID!
    title:String!
    slug:String!
    messages:[Message]

}

type Test{
    text: String!
}

### INPUT TYPES
input NewUserInput {
    name: String!
    username: String!
    email:String!
    password:String!
}



input UpdateUserInput {
    name: String
    username: String
    password:String
}

### Queries
type Query{

    ## FOR TEST
    greeting: Test

    user(ID:ID!): User!
    users: [User]!
}


### Mutations
type Mutation{
    createUser(createinput:NewUserInput!): User!
    updateUser(uname:String,updateinput:UpdateUserInput):User!
    deleteUser(uid:ID!):User!
}